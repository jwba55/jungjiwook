name: 배포

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 소스코드 체크아웃
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
      
      # 3. application.properties 생성
      - name: Create application.properties
        run: |
          touch ./src/main/resources/application.properties
          echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties
          cat ./src/main/resources/application.properties

      # Docker 이미지 빌드 전
      - name: Maven Build
        run: mvn clean package -DskipTests

      # 2. 도커허브 로그인
      - name: 도커허브에 로그인
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. 이미지 빌드
      - name: 이미지 빌드
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/wookportfolio .

      # 4. 도커허브에 이미지 푸시
      - name: 도커허브에 이미지 푸시
        run: docker push ${{ secrets.DOCKER_USERNAME }}/wookportfolio

      - name: EC2 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            APP_DIR=/home/ubuntu/wookportfolio
            cd $APP_DIR

            # SSL 폴더 제외하고 기존 파일 삭제
            find . -maxdepth 1 ! -name '.' ! -name 'certbot' -exec rm -rf {} +

            # Git clone 또는 pull
            if [ ! -d ".git" ]; then
              git clone https://github.com/jwba55/wookportfolio.git .
            else
              git reset --hard
              git clean -fd
              git pull origin main
            fi

            # Maven 빌드 (pom.xml 위치 확인)
            cd $APP_DIR   # pom.xml이 있는 디렉터리
            mvn clean package -DskipTests

            # Docker Compose 재빌드 & 재시작
            cd $APP_DIR
            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d

            # Certbot 인증서 갱신 & Nginx reload
            docker-compose run --rm certbot renew --webroot -w /var/lib/letsencrypt
            docker-compose exec nginx nginx -t && docker-compose exec nginx nginx -s reload